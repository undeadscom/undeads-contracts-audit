{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xA4392264a2d8c998901D10C154C91725b1BF0158",
    "txHash": "0x3b1723d2cb6303b772af9ad20fb90fd3aeb69c89bec73794f711584aa3a30546"
  },
  "proxies": [
    {
      "address": "0xa43bD34038Ca13e7115e16770D722E62ea706212",
      "txHash": "0x426cabd968f3344881d921ca74edb352023f6ab9b9dc8fc1ca844385220d08a7",
      "kind": "transparent"
    },
    {
      "address": "0x51815CEbeF59b88DAfD1a5f24095eee1236ffCDd",
      "txHash": "0x83c5d2c52ef693b4ec71586350ebb814a65f37c5fa12b79ff94531b7a6f8e500",
      "kind": "transparent"
    },
    {
      "address": "0x48cF3EF6aF69A257a68e2350c3Ce267E5C47626c",
      "txHash": "0x2465192dad54c831dfb3d4774eb91f8531e6f401963e4b73d1e318f611befe6f",
      "kind": "transparent"
    },
    {
      "address": "0x7001EA1Ca8C28AA90A0D2e8B034aa56319fF0a7E",
      "txHash": "0xe1842a6281dd62c58d372c28a30907466cf15d1b402c8df6ebb3d0ca0beefb81",
      "kind": "transparent"
    },
    {
      "address": "0x25CbaB0C13650026C7BcBCcE7EF963c303B68Cd6",
      "txHash": "0x36b2175d6e9e313da251f9aa1ae40ed1c1f6e2b4969e820446677803c0a343bd",
      "kind": "transparent"
    },
    {
      "address": "0xf491289b5DA695D7892B4960dcf48eB7e1ACb6B8",
      "txHash": "0x88939ae6b64785358f14870e7dbc2a613d04041a2a9d25ccf4deb420726799df",
      "kind": "transparent"
    },
    {
      "address": "0x394BfB86641Bf8cA8A757a318499A580Cc1f26C6",
      "txHash": "0x30f8f9060e1477523837da86b48aec58d0ee2b547520ae55e0806fc09f1a9717",
      "kind": "transparent"
    },
    {
      "address": "0xF57f76D23568E31b12f62E7B8eB880f486369bCf",
      "txHash": "0x6ebbe2d817f648e5008173dfcb39c60edc70678c2f0a6732a0f00f9dd27da305",
      "kind": "transparent"
    },
    {
      "address": "0xd8672a4A1bf37D36beF74E36edb4f17845E76F4e",
      "txHash": "0xafbf2782645f9d03656abe2b93b83974eae9ae26284bf437f69467cc524121af",
      "kind": "transparent"
    },
    {
      "address": "0xB529f14AA8096f943177c09Ca294Ad66d2E08b1f",
      "txHash": "0xa60b12b701e756f1e9178cd97d96bf9f04593e03b449f3beeb77921f23c2c120",
      "kind": "transparent"
    },
    {
      "address": "0x4e71920b7330515faf5EA0c690f1aD06a85fB60c",
      "txHash": "0x327355a7c99f798590adf96f054e1ce34817f70e0237e1766e5e5158910d5176",
      "kind": "transparent"
    },
    {
      "address": "0xA509542aDa3196a38bD6fD03b253547EE09220C4",
      "txHash": "0x2e1d0e04c57730f59e65ccfcf0b4b26740a60953ba22ff24745363cab605de55",
      "kind": "transparent"
    },
    {
      "address": "0x35b338b4ADE005F25a8982A597638827B8617Ad4",
      "txHash": "0x0d53354e0a2503579f07c5e25adc5c2a331576dbe065b731ee8886b6fa684781",
      "kind": "transparent"
    },
    {
      "address": "0xdE5bb8B8961fAef05b2ab38A70C81BdBC91Add29",
      "txHash": "0x62b5c2f58fa1a1f6038d4aa7d4b4edde2fd92b591505c327d46e7d6f30fc3c2e",
      "kind": "transparent"
    },
    {
      "address": "0x12104CB63B58fD9Ed06034052A4C8D268f5D9125",
      "txHash": "0x92cdbc9066a25acd1d46a0f39e2c22a2e62b27a3dd653e1ad4d1056421969fb3",
      "kind": "transparent"
    }
  ],
  "impls": {
    "912326c65500f7a470a4033f24f0a8e8fd8da74e208e3541a5bfc37391b49b15": {
      "address": "0x13274Fe19C0178208bCbee397af8167A7be27f6f",
      "txHash": "0xa5bb01dd6a486c7861d736fcd26ddf3739b6b7496dd3cfcb41c98c8085066a63",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "LehmerRandomizer",
            "label": "_seeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\utils\\LehmerRandomizer.sol:10"
          },
          {
            "contract": "LehmerRandomizer",
            "label": "_last",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\utils\\LehmerRandomizer.sol:11"
          },
          {
            "contract": "LehmerRandomizer",
            "label": "A",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\utils\\LehmerRandomizer.sol:12"
          },
          {
            "contract": "LehmerRandomizer",
            "label": "B",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\utils\\LehmerRandomizer.sol:13"
          },
          {
            "contract": "LehmerRandomizer",
            "label": "C",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\utils\\LehmerRandomizer.sol:14"
          },
          {
            "contract": "LehmerRandomizer",
            "label": "D",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\utils\\LehmerRandomizer.sol:15"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8d2a4d971639d85809272fdfe23fb04c8e64c964ae895cb1693e3592847830af": {
      "address": "0xF328c11c4dF88d18FcBd30ad38d8B4714F4b33bF",
      "txHash": "0xae93afedb0e93b072c3759529589c437d3bc8e867911a3e65d0fd8bf43402dcc",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "GuardExtensionUpgradeable",
            "label": "_rightsContract",
            "type": "t_contract(IRights)35403",
            "src": "..\\project:\\contracts\\upgradeable\\utils\\GuardExtensionUpgradeable.sol:12"
          },
          {
            "contract": "Benefits",
            "label": "_ids",
            "type": "t_struct(Counter)11538_storage",
            "src": "..\\project:\\contracts\\persons\\Benefits.sol:21"
          },
          {
            "contract": "Benefits",
            "label": "_deletedIds",
            "type": "t_struct(Counter)11538_storage",
            "src": "..\\project:\\contracts\\persons\\Benefits.sol:22"
          },
          {
            "contract": "Benefits",
            "label": "_used",
            "type": "t_struct(BitMap)13553_storage",
            "src": "..\\project:\\contracts\\persons\\Benefits.sol:23"
          },
          {
            "contract": "Benefits",
            "label": "_benefits",
            "type": "t_mapping(t_address,t_array(t_struct(Benefit)17394_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\persons\\Benefits.sol:24"
          },
          {
            "contract": "Benefits",
            "label": "_receiverIds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\persons\\Benefits.sol:25"
          },
          {
            "contract": "Benefits",
            "label": "_receivers",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\persons\\Benefits.sol:26"
          },
          {
            "contract": "Benefits",
            "label": "_additionalIssued",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\persons\\Benefits.sol:33"
          }
        ],
        "types": {
          "t_struct(Counter)11538_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(BitMap)13553_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_array(t_struct(Benefit)17394_storage)dyn_storage)": {
            "label": "mapping(address => struct Structures.Benefit[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Benefit)17394_storage)dyn_storage": {
            "label": "struct Structures.Benefit[]"
          },
          "t_struct(Benefit)17394_storage": {
            "label": "struct Structures.Benefit",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "from",
                "type": "t_uint256"
              },
              {
                "label": "until",
                "type": "t_uint256"
              },
              {
                "label": "id",
                "type": "t_uint16"
              },
              {
                "label": "amount",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "issued",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_contract(IRights)35403": {
            "label": "contract IRights"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "09b22b8db698cbbb69a8528e5f952c2d6fd7cae63c74c7fdc45ac2f5d550e19f": {
      "address": "0xD5E8AA91BDa51688e6f3De82E52Fb38E35298515",
      "txHash": "0x081412ccb6793791a35448ae48bac3996f1173dd1648f1feb719c370743834f2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "GuardExtensionUpgradeable",
            "label": "_rightsContract",
            "type": "t_contract(IRights)35403",
            "src": "..\\project:\\contracts\\upgradeable\\utils\\GuardExtensionUpgradeable.sol:12"
          },
          {
            "contract": "AggregationFunds",
            "label": "claimableContracts",
            "type": "t_mapping(t_address,t_array(t_contract(IClaimableFunds)35279)dyn_storage)",
            "src": "..\\project:\\contracts\\manage\\AggregationFunds.sol:45"
          },
          {
            "contract": "AggregationFunds",
            "label": "_uds",
            "type": "t_contract(IERC20)9096",
            "src": "..\\project:\\contracts\\manage\\AggregationFunds.sol:47"
          },
          {
            "contract": "AggregationFunds",
            "label": "_ugold",
            "type": "t_contract(IERC20)9096",
            "src": "..\\project:\\contracts\\manage\\AggregationFunds.sol:48"
          },
          {
            "contract": "AggregationFunds",
            "label": "_limits",
            "type": "t_mapping(t_address,t_struct(Limits)17446_storage)",
            "src": "..\\project:\\contracts\\manage\\AggregationFunds.sol:49"
          },
          {
            "contract": "AggregationFunds",
            "label": "coldWallet",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\manage\\AggregationFunds.sol:50"
          },
          {
            "contract": "AggregationFunds",
            "label": "hotWallet",
            "type": "t_address_payable",
            "src": "..\\project:\\contracts\\manage\\AggregationFunds.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(IClaimableFunds)35279)dyn_storage)": {
            "label": "mapping(address => contract IClaimableFunds[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(IClaimableFunds)35279)dyn_storage": {
            "label": "contract IClaimableFunds[]"
          },
          "t_contract(IClaimableFunds)35279": {
            "label": "contract IClaimableFunds"
          },
          "t_contract(IERC20)9096": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_struct(Limits)17446_storage)": {
            "label": "mapping(address => struct AggregationFunds.Limits)"
          },
          "t_struct(Limits)17446_storage": {
            "label": "struct AggregationFunds.Limits",
            "members": [
              {
                "label": "min",
                "type": "t_uint256"
              },
              {
                "label": "max",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_contract(IRights)35403": {
            "label": "contract IRights"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "23c54db8ee43d547349c7c511a8800c1c061888fc232386647628abf0a75b757": {
      "address": "0xa43bD34038Ca13e7115e16770D722E62ea706212",
      "txHash": "0x228fa0dd963d4917e6a69bc1929e4e666df1e8808073d07c6a7e182fa8b92962",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "GuardExtensionUpgradeable",
            "label": "_rightsContract",
            "type": "t_contract(IRights)35403",
            "src": "..\\project:\\contracts\\upgradeable\\utils\\GuardExtensionUpgradeable.sol:12"
          },
          {
            "contract": "GamePool",
            "label": "_completedClaims",
            "type": "t_struct(BitMap)13553_storage",
            "src": "..\\project:\\contracts\\game\\GamePool.sol:31"
          },
          {
            "contract": "GamePool",
            "label": "_claimLimits",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\game\\GamePool.sol:32"
          },
          {
            "contract": "GamePool",
            "label": "_permitter",
            "type": "t_address",
            "src": "..\\project:\\contracts\\game\\GamePool.sol:33"
          }
        ],
        "types": {
          "t_struct(BitMap)13553_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IRights)35403": {
            "label": "contract IRights"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f2ad136229d167ce9dfca3f6ab9192ffa4d58ff3f7291a9a5c724dd39cd71630": {
      "address": "0x66078a97Def9d40B2cA7abb44733dD897Ec6231D",
      "txHash": "0xdba105b47c8995d8ea85edb2975564af22009e627ccab322350052b4ace738a6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:171"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "4ebac3d5cc84163746769eb361ec7e65bd3658af7464c3692afb1fa16363d73e": {
      "address": "0x62227531b82259561CC9ad4413188F08E536598a",
      "txHash": "0x92fcfb88a4d539625aa493e26e99c1bb19892c81fb4b7efd3f48c250d87041f5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:76"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
